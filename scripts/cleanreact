read -p "create vite? (y/n): " response

if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
    npm create vite@latest .
fi

rm src/assets/react.svg
rm src/App.css

mkdir src/components
mkdir src/components/ui
mkdir src/hooks
mkdir src/api
mkdir src/pages
mkdir src/contexts


read -p "(t/j)sx? " response

if [ "$response" = "j"  ]; then
    echo "
    const App = () => {
        return (
                <div>App</div>
               )
    }
    export default App
    " > src/App.jsx

    touch src/contexts/Providers.jsx
    echo "
    import { ReactNode } from "react";

    //Providers component for setting all the Providers for project in one seperate file
    const Providers = ({ children }) => {
        return <>{children}</>;
    };

    export default Providers;
    " > src/contexts/Providers.jsx
fi
if [ "$response" = "t"  ]; then
    echo "
    const App = () => {
        return (
                <div>App</div>
               )
    }
    export default App
    " > src/App.tsx

    touch src/contexts/Providers.tsx
    echo "
    import { ReactNode } from "react";

    //Providers component for setting all the Providers for project in one seperate file
    type ProvidersProps = {
        children: ReactNode;
    };
    const Providers = ({ children }: ProvidersProps) => {
        return <>{children}</>;
    };

    export default Providers;
    " > src/contexts/Providers.tsx
fi


read -p "tailwind? (y/n): " response

if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
    npm install -D tailwindcss postcss autoprefixer
    npx tailwindcss init -p --ts

    echo "@tailwind base;
    @tailwind components;
    @tailwind utilities;" > src/index.css

    echo'
    import type { Config } from 'tailwindcss'

    export default {
    content: [
                 "./index.html",
                 "./src/**/*.{js,ts,jsx,tsx}",
    ],
    theme: {
    extend: {},
    },
    plugins: [],
        } satisfies Config

    '> tailwind.config.ts
fi

read -p "router? (y/n): " response
if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
    npm i react-router-dom

fi

read -p "run dev? (y/n): " response
if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
    npm run dev
fi
